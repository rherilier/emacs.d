
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; my local config


(setq-default query-user-mail-address nil
              user-full-name "ME"
              user-mail-address "me@host.tld"
              indent-tabs-mode nil
              )

(custom-set-faces '(region ((t (:background "gray80"))))
                  )

(c-add-style "rem"
             '("gnu"
               (indent-tabs-mode . nil)
               (c-basic-offset . 2)
               (c-offsets-alist (innamespace . -)
                                (inextern-lang . -)
                                (substatement-open . 0)
                                )
               )
             )

(c-add-style "work"
             '("stroustrup"
               (indent-tabs-mode . t)
               (backward-delete-char-untabify-method . nil)
               (c-basic-offset . 4)
               (tab-width . 4)
               (c-offsets-alist (innamespace . -)
                                (inline-open . 0)
                                (inher-cont . c-lineup-multi-inher)
                                (arglist-cont-nonempty . +)
                                (template-args-cont . +)
                                )
               )
             )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defvar-local my:indent-tab-mode nil)

(defun my:set-indent-tab-mode (v)
  (progn (if v
             (progn (setq my:indent-tab-mode t)
                    (setq indent-tabs-mode t)
                    (setq c-default-style "work")
                    (setq cmake-tab-width 4)
                    (smart-tabs-mode)
                    (setq smart-tabs-mode t)
                    (message "setting work c-style")
                    )
           (progn (setq my:indent-tab-mode nil)
                  (setq indent-tabs-mode nil)
                  (setq c-default-style "rem")
                  (setq cmake-tab-width 2)
                  (smart-tabs-mode)
                  (setq smart-tabs-mode nil)
                  (message "setting rem c-style")
                  )
           )
         )
  )

(defun my:toggle-indent-tab-mode ()
  ""
  (interactive)
  (my:set-indent-tab-mode (not my:indent-tab-mode))
  )

(smart-tabs-insinuate 'c 'c++)
(smart-tabs-mode)
(setq smart-tabs-mode nil)

(global-set-key (kbd "C-c i") 'my:toggle-indent-tab-mode)
(my:set-indent-tab-mode nil)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(provide 'config-local)
